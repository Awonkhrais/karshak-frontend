{"ast":null,"code":"var _jsxFileName = \"/home/awonkhrais/project301/karshak-frontend/karshak/src/Mydishes.js\";\nimport React, { Component } from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Card from 'react-bootstrap/Card';\nimport CardGroup from 'react-bootstrap/CardGroup';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { withAuth0 } from '@auth0/auth0-react';\nimport axios from 'axios';\nimport Modal from 'react-bootstrap/Modal';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../src/style/Mydishes.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Mydishes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      if (this.props.auth0.isAuthenticated) {\n        const {\n          user\n        } = this.props.auth0;\n        const email = user.email;\n        console.log(email);\n        let foodURL = process.env.REACT_APP_SERVER_URL || 'http://localhost:8000/';\n        let data = await axios.get(`${foodURL}food/handleUsers?email=${email}`);\n        console.log(data.data.food);\n        this.setState({\n          myDishes: data.data.food,\n          stop: false\n        });\n      }\n    };\n\n    this.deleteFood = async index => {\n      const {\n        user\n      } = this.props.auth0;\n      const email = user.email;\n      const idx = index;\n      let foodURL = 'http://localhost:8000/'; // http://localhost:8000/food/deleteFoodDishes?email=saadoundhirat93@gmail.com&index=4\n\n      let data = await axios.delete(`${foodURL}food/deleteFoodDishes?email=${email}&index=${idx}`);\n      console.log(\"response\", data.data);\n      this.setState({\n        myDishes: data.data.food\n      });\n    };\n\n    this.updateMydishes = async event => {\n      event.preventDefault();\n      const mydishData = {\n        feedback: event.target.feedBack.value,\n        tried: event.target.checkbox.checked,\n        email: this.props.auth0.user.email,\n        image: this.state.image,\n        id: this.state.id,\n        title: this.state.title,\n        index: this.state.indexNum\n      };\n      console.log('my dish data ', mydishData);\n      let foodURL = 'http://localhost:8000/';\n      let URL = `${foodURL}food/updateFoodDishes`;\n      axios.put(URL, mydishData).then(result => {\n        this.setState({\n          myDishes: result.data.food\n        });\n      }).catch(err => {\n        console.log(\"Bad req\");\n      });\n    };\n\n    this.showUpdateForm = idx => {\n      this.setState({\n        // show:true,\n        indexNum: idx,\n        title: this.state.myDishes[idx].title,\n        image: this.state.myDishes[idx].image,\n        id: this.state.myDishes[idx].id\n      });\n    };\n\n    this.changeFeedback = e => {\n      this.setState({\n        feedBack: e.target.value\n      });\n    };\n\n    this.changeCheckbox = e => {\n      this.setState({\n        tried: e.target.value\n      });\n    };\n\n    this.openModel = async idnum => {\n      const id = idnum;\n      console.log(id);\n      let foodURL = 'http://localhost:8000/';\n      let URL = `${foodURL}food/getFoodInfo?id=${id}`;\n      const ingr = await axios.get(URL);\n      console.log(ingr.data.ingredients);\n      this.setState({\n        recepe: ingr.data.ingredients,\n        show: true\n      });\n      console.log('my recepe', this.state.recepe);\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.state = {\n      myDishes: [],\n      stop: true,\n      feedBack: '',\n      tried: false,\n      indexNum: 0,\n      title: '',\n      image: '',\n      id: '',\n      recepe: [],\n      show: false\n    };\n  }\n\n  render() {\n    console.log('im in my dishes');\n    console.log(this.state.myDishes);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"maindiv\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"welcome-mydish\",\n        children: [\"Welcome \", this.props.auth0.user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), this.state.myDishes.length ? /*#__PURE__*/_jsxDEV(CardGroup, {\n        className: \"cardGroup\",\n        children: this.state.myDishes.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"card\",\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                style: {\n                  width: '25rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  className: \"cardName\",\n                  children: [\"  \", item.title]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Card.Img, {\n                  className: \"cardimg\",\n                  variant: \"top\",\n                  src: item.image,\n                  onClick: () => this.openModel(item.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form, {\n                  onSubmit: event => {\n                    this.updateMydishes(event);\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                    controlId: \"formBasicEmail\",\n                    children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                      className: \"notes\",\n                      type: \"text\",\n                      placeholder: `notes : ${this.state.myDishes[index].feedback}`,\n                      name: \"feedBack\",\n                      onChange: e => this.changeFeedback(e),\n                      value: this.state.myDishes[index].feedBack\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    controlId: \"formBasicEmail\",\n                    className: \"formGroup-checkbox\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"checkbox-label\",\n                      children: \"tried it before \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 139,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                      className: \"formcheck\",\n                      type: \"checkbox\",\n                      name: \"checkbox\",\n                      onChange: e => this.changeCheckbox(e),\n                      value: this.state.myDishes[index].tried,\n                      defaultChecked: this.state.myDishes[index].tried\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 140,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"buttonsmydishes\",\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      className: \"submit\",\n                      variant: \"primary\",\n                      type: \"submit\",\n                      onClick: () => this.showUpdateForm(index),\n                      children: \"Submit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      className: \"delete\",\n                      variant: \"primary\",\n                      onClick: () => this.deleteFood(index),\n                      children: \"delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 146,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 48\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"warning\",\n        children: [\"Please add some dishes first !!!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 88\n        }, this), \"go to \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"./search\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 27\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.show,\n        onHide: this.handleClose,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          className: \"ingredents\",\n          style: {\n            border: 'none'\n          },\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Ingrediants:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          className: \"ingredents\",\n          style: {\n            border: 'none'\n          },\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            className: \"ingredents\",\n            children: this.state.recepe.map((item, idx) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  className: \"ingredents\",\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          className: \"ingredents\",\n          style: {\n            border: '150px '\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"closebutton-ingModal\",\n            variant: \"secondary\",\n            onClick: this.handleClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default _c = withAuth0(Mydishes);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/awonkhrais/project301/karshak-frontend/karshak/src/Mydishes.js"],"names":["React","Component","Header","Footer","Card","CardGroup","Button","Form","withAuth0","axios","Modal","ListGroup","Mydishes","constructor","props","componentDidMount","auth0","isAuthenticated","user","email","console","log","foodURL","process","env","REACT_APP_SERVER_URL","data","get","food","setState","myDishes","stop","deleteFood","index","idx","delete","updateMydishes","event","preventDefault","mydishData","feedback","target","feedBack","value","tried","checkbox","checked","image","state","id","title","indexNum","URL","put","then","result","catch","err","showUpdateForm","changeFeedback","e","changeCheckbox","openModel","idnum","ingr","ingredients","recepe","show","handleClose","render","name","length","map","item","width","border"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Card from 'react-bootstrap/Card';\nimport CardGroup from 'react-bootstrap/CardGroup';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form'\nimport { withAuth0 } from '@auth0/auth0-react';\nimport axios from 'axios';\nimport Modal from 'react-bootstrap/Modal';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../src/style/Mydishes.css';\n\nexport class Mydishes extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            myDishes: [],\n            stop: true,\n            feedBack: '',\n            tried: false,\n            indexNum: 0,\n            title: '',\n            image: '',\n            id: '',\n            recepe: [],\n            show: false,\n        }\n    }\n    componentDidMount = async () => {\n        if (this.props.auth0.isAuthenticated) {\n            const { user } = this.props.auth0;\n            const email = user.email;\n            console.log(email);\n            let foodURL = process.env.REACT_APP_SERVER_URL || 'http://localhost:8000/';\n            let data = await axios.get(`${foodURL}food/handleUsers?email=${email}`);\n            console.log(data.data.food);\n            this.setState({\n                myDishes: data.data.food,\n                stop: false,\n            })\n        }\n    }\n    deleteFood = async (index) => {\n        const { user } = this.props.auth0;\n        const email = user.email;\n        const idx = index;\n        let foodURL = 'http://localhost:8000/';\n        // http://localhost:8000/food/deleteFoodDishes?email=saadoundhirat93@gmail.com&index=4\n        let data = await axios.delete(`${foodURL}food/deleteFoodDishes?email=${email}&index=${idx}`);\n        console.log(\"response\", data.data)\n        this.setState({\n            myDishes: data.data.food,\n        })\n    }\n    updateMydishes = async (event) => {\n        event.preventDefault();\n        const mydishData = {\n            feedback: event.target.feedBack.value,\n            tried: event.target.checkbox.checked,\n            email: this.props.auth0.user.email,\n            image: this.state.image,\n            id: this.state.id,\n            title: this.state.title,\n            index: this.state.indexNum,\n        }\n        console.log('my dish data ', mydishData);\n        let foodURL = 'http://localhost:8000/';\n        let URL = `${foodURL}food/updateFoodDishes`\n        axios.put(URL, mydishData)\n            .then(result => {\n                this.setState({\n                    myDishes: result.data.food\n                })\n            })\n            .catch(err => {\n                console.log(\"Bad req\")\n            })\n    };\n    showUpdateForm = (idx) => {\n        this.setState({\n            // show:true,\n            indexNum: idx,\n            title: this.state.myDishes[idx].title,\n            image: this.state.myDishes[idx].image,\n            id: this.state.myDishes[idx].id,\n        })\n    }\n    changeFeedback = (e) => {\n        this.setState({\n            feedBack: e.target.value\n        })\n    }\n    changeCheckbox = (e) => {\n        this.setState({\n            tried: e.target.value\n        })\n    }\n    openModel = async (idnum) => {\n        const id = idnum;\n        console.log(id);\n        let foodURL = 'http://localhost:8000/';\n        let URL = `${foodURL}food/getFoodInfo?id=${id}`;\n        const ingr = await axios.get(URL);\n        console.log(ingr.data.ingredients);\n        this.setState({\n            recepe: ingr.data.ingredients,\n            show: true,\n        })\n        console.log('my recepe', this.state.recepe)\n    }\n    handleClose = () => {\n        this.setState({\n            show: false,\n        })\n    }\n    render() {\n        console.log('im in my dishes');\n        console.log(this.state.myDishes);\n        return (\n            <div className='maindiv'>\n                <Header />\n                {/* <Button on onClick={this.componentDidMount}>SHOW MY CARDS</Button> */}\n                <h1 className='welcome-mydish'>Welcome {this.props.auth0.user.name}</h1>\n                {/* <p className='qoute'>\" I'm not hungry. but I'm bored. therefore, I shall EAT \"</p> */}\n                {this.state.myDishes.length ? (<CardGroup className='cardGroup'>\n                    {this.state.myDishes.map((item, index) => {\n                        return (<div >\n                            <Card key={index} className='card'>\n                                <Card.Body style={{ width: '25rem' }}   >\n                                    <Card.Title className='cardName'>  {item.title}</Card.Title>\n                                    <Card.Img className='cardimg' variant=\"top\" src={item.image} onClick={() => this.openModel(item.id)} />\n                                    <Form onSubmit={(event) => { this.updateMydishes(event) }}>\n                                        <Form.Group controlId=\"formBasicEmail\">\n                                            <Form.Control className='notes' type=\"text\" placeholder={`notes : ${this.state.myDishes[index].feedback}`} name='feedBack' onChange={(e) => this.changeFeedback(e)} value={this.state.myDishes[index].feedBack} />\n                                        </Form.Group>\n                                        <Form.Group controlId=\"formBasicEmail\" className='formGroup-checkbox'>\n                                            <label className='checkbox-label'>tried it before </label>\n                                            <Form.Check className='formcheck'  type=\"checkbox\" name='checkbox' onChange={(e) => this.changeCheckbox(e)} value={this.state.myDishes[index].tried} defaultChecked={this.state.myDishes[index].tried} />\n                                        </Form.Group>\n                                        <div className='buttonsmydishes'>\n                                            <Button className='submit' variant=\"primary\" type=\"submit\" onClick={() => this.showUpdateForm(index)}>\n                                                Submit\n                                            </Button>\n                                            <Button className='delete' variant=\"primary\" onClick={() => this.deleteFood(index)}>\n                                                delete\n                                            </Button>\n                                        </div>\n                                    </Form>\n                                </Card.Body>\n                            </Card>\n                        </div>)\n                    })}\n                </CardGroup>) : <p className='warning'>Please add some dishes first !!!<br></br>\n                    go to <a href=\"./search\">Search</a> </p>}\n                <Footer />\n                <Modal show={this.state.show} onHide={this.handleClose} >\n                    <Modal.Header closeButton className='ingredents' style={{border:'none'}}>\n                        <Modal.Title>Ingrediants:</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body className='ingredents'style={{border:'none'}}>\n                        <ListGroup className='ingredents'>\n                            {this.state.recepe.map((item, idx) => {\n                                return (\n                                    <div>\n                                        <ListGroup.Item className='ingredents'>{item.name}</ListGroup.Item>\n                                    </div>\n                                )\n                            })}\n                        </ListGroup>\n                    </Modal.Body>\n                    <Modal.Footer className='ingredents'style={{border:'150px ' }}>\n                        <Button className='closebutton-ingModal' variant=\"secondary\" onClick={this.handleClose}>\n                            Close\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        )\n    }\n}\nexport default withAuth0(Mydishes)"]},"metadata":{},"sourceType":"module"}